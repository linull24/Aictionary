name: Build and Package

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Build Linux
      run: |
        dotnet run --project build/build.csproj -- PublishLinuxAmd64
        dotnet run --project build/build.csproj -- PublishLinuxArm64
        dotnet run --project build/build.csproj -- PublishLinuxAmd64FrameworkDependent
        dotnet run --project build/build.csproj -- PublishLinuxArm64FrameworkDependent
    
    - name: Upload Linux Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: artifacts-linux
        path: artifacts/linux-*

  build-windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Build Windows
      run: |
        dotnet run --project build/build.csproj -- PublishWindowsAmd64
        dotnet run --project build/build.csproj -- PublishWindowsArm64
        dotnet run --project build/build.csproj -- PublishWindowsAmd64FrameworkDependent
        dotnet run --project build/build.csproj -- PublishWindowsArm64FrameworkDependent
    
    - name: Upload Windows Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: artifacts-windows
        path: artifacts/windows-*

  build-macos:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Install create-dmg
      run: brew install create-dmg
    
    - name: Build macOS
      run: |
        dotnet run --project build/build.csproj -- PublishMacOSIntel
        dotnet run --project build/build.csproj -- PublishMacOSArm64
        dotnet run --project build/build.csproj -- PublishMacOSIntelFrameworkDependent
        dotnet run --project build/build.csproj -- PublishMacOSArm64FrameworkDependent
    
    - name: Create DMG
      run: dotnet run --project build/build.csproj -- CreateMacOSDmg
    
    - name: Upload macOS Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: artifacts-macos
        path: artifacts/macos-*

  package-linux:
    needs: build-linux
    runs-on: ubuntu-22.04
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download Linux Artifacts
      uses: actions/download-artifact@v4
      with:
        name: artifacts-linux
        path: artifacts/
    
    - name: Install packaging tools
      run: |
        sudo apt-get update
        sudo apt-get install -y dpkg-dev fakeroot
    
    - name: Build DEB packages
      run: |
        chmod +x scripts/build-deb.sh
        ./scripts/build-deb.sh
    
    - name: Generate PKGBUILD
      run: |
        chmod +x scripts/generate-pkgbuild.sh
        ./scripts/generate-pkgbuild.sh
    
    - name: Upload DEB packages
      uses: actions/upload-artifact@v4
      with:
        name: deb-packages
        path: "*.deb"
    
    - name: Upload PKGBUILD
      uses: actions/upload-artifact@v4
      with:
        name: archlinux-pkgbuild
        path: PKGBUILD

  package-archlinux:
    needs: build-linux
    runs-on: ubuntu-22.04
    container: archlinux:latest
    
    steps:
    - name: Install dependencies
      run: |
        pacman -Syu --noconfirm
        pacman -S --noconfirm base-devel git
    
    - uses: actions/checkout@v4
    
    - name: Download Linux Artifacts
      uses: actions/download-artifact@v4
      with:
        name: artifacts-linux
        path: artifacts/
    
    - name: Create non-root user for makepkg
      run: |
        useradd -m builder
        echo 'builder ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers
        chown -R builder:builder .
    
    - name: Build Arch package
      run: |
        chmod +x scripts/build-arch.sh
        sudo -u builder ./scripts/build-arch.sh
    
    - name: Upload Arch package
      uses: actions/upload-artifact@v4
      with:
        name: archlinux-package
        path: "*.pkg.tar.zst"

